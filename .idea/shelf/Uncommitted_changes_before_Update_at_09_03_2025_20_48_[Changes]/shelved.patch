Index: CurrencyConverter/app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.CurrencyConverter\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.CurrencyConverter\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CurrencyConverter/app/src/main/AndroidManifest.xml b/CurrencyConverter/app/src/main/AndroidManifest.xml
--- a/CurrencyConverter/app/src/main/AndroidManifest.xml	(revision 0e7d7035ce0454414ff91a09b639a9933c3cb3d1)
+++ b/CurrencyConverter/app/src/main/AndroidManifest.xml	(date 1741563650528)
@@ -10,13 +10,13 @@
         android:label="@string/app_name"
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
-        android:theme="@style/Theme.CurrencyConverter"
+        android:theme="@style/Theme.AppCompat.Light"
         tools:targetApi="31">
         <activity
             android:name=".MainActivity"
             android:exported="true"
             android:label="@string/app_name"
-            android:theme="@style/Theme.CurrencyConverter">
+            android:theme="@style/Theme.AppCompat.Light">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
Index: CurrencyConverter/app/src/main/java/com/example/currencyconverter/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.currencyconverter\r\n\r\nimport android.os.Bundle\r\nimport android.widget.Button\r\nimport android.widget.EditText\r\nimport android.widget.TextView\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.lifecycle.ViewModelProvider\r\n\r\nclass MainActivity : AppCompatActivity() {\r\nprivate lateinit var viewModel: CurrencyViewModel\r\n\r\noverride fun onCreate(savedInstanceState: Bundle?){\r\n    super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activitymain)\r\n\r\n    val repository = CurrencyRepository()\r\n    viewModel = ViewModelProvider(this, CurrencyViewModelFactory(repository))[CurrencyViewModel::class.java]\r\n\r\n    val editAmount = findViewById<EditText>(R.id.editAmount)\r\n    val btnConvert = findViewById<Button>(R.id.btnConvert)\r\n    val txtResult = findViewById<TextView>(R.id.txtResult)\r\n\r\n    btnConvert.setOnClickListener{\r\nval amount = editAmount.text.toString().toDouble()\r\n        viewModel.convertCurrency(amount,\"USD\", \"BRL\")\r\n    }\r\n\r\nviewModel.exchangeRate.observe(this) {result ->\r\n    txtResult.text = \"Resultado: $result BRL\"\r\n\r\n}\r\n\r\n\r\n}\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CurrencyConverter/app/src/main/java/com/example/currencyconverter/MainActivity.kt b/CurrencyConverter/app/src/main/java/com/example/currencyconverter/MainActivity.kt
--- a/CurrencyConverter/app/src/main/java/com/example/currencyconverter/MainActivity.kt	(revision 0e7d7035ce0454414ff91a09b639a9933c3cb3d1)
+++ b/CurrencyConverter/app/src/main/java/com/example/currencyconverter/MainActivity.kt	(date 1741563342408)
@@ -12,7 +12,7 @@
 
 override fun onCreate(savedInstanceState: Bundle?){
     super.onCreate(savedInstanceState)
-        setContentView(R.layout.activitymain)
+        setContentView(R.layout.activity_main)
 
     val repository = CurrencyRepository()
     viewModel = ViewModelProvider(this, CurrencyViewModelFactory(repository))[CurrencyViewModel::class.java]
Index: CurrencyConverter/app/src/main/res/layout/activitymain.xml
===================================================================
diff --git a/CurrencyConverter/app/src/main/res/layout/activitymain.xml b/CurrencyConverter/app/src/main/res/layout/activitymain.xml
deleted file mode 100644
--- a/CurrencyConverter/app/src/main/res/layout/activitymain.xml	(revision 0e7d7035ce0454414ff91a09b639a9933c3cb3d1)
+++ /dev/null	(revision 0e7d7035ce0454414ff91a09b639a9933c3cb3d1)
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-</LinearLayout>
\ No newline at end of file
Index: CurrencyConverter/app/src/main/java/com/example/currencyconverter/CurrencyRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.currencyconverter\r\n\r\nimport ExchangeRatesResponse\r\n\r\n//\r\nclass CurrencyRepository {\r\n    suspend fun getRates(base: String): ExchangeRatesResponse? {\r\n        return RetrofitInstance.api.getExchangeRates(base).body()\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CurrencyConverter/app/src/main/java/com/example/currencyconverter/CurrencyRepository.kt b/CurrencyConverter/app/src/main/java/com/example/currencyconverter/CurrencyRepository.kt
--- a/CurrencyConverter/app/src/main/java/com/example/currencyconverter/CurrencyRepository.kt	(revision 0e7d7035ce0454414ff91a09b639a9933c3cb3d1)
+++ b/CurrencyConverter/app/src/main/java/com/example/currencyconverter/CurrencyRepository.kt	(date 1741559034778)
@@ -1,6 +1,7 @@
 package com.example.currencyconverter
 
 import ExchangeRatesResponse
+import RetrofitInstance
 
 //
 class CurrencyRepository {
Index: CurrencyConverter/app/src/main/java/ExchangeRatesResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>data class ExchangeRatesResponse (\r\n    val base:String,\r\n    val rates:Map<String, Double>\r\n)\r\n\r\n//Essa classe representa a resposta da API, facilitando o parsing do JSON.
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CurrencyConverter/app/src/main/java/ExchangeRatesResponse.kt b/CurrencyConverter/app/src/main/java/ExchangeRatesResponse.kt
--- a/CurrencyConverter/app/src/main/java/ExchangeRatesResponse.kt	(revision 0e7d7035ce0454414ff91a09b639a9933c3cb3d1)
+++ b/CurrencyConverter/app/src/main/java/ExchangeRatesResponse.kt	(date 1741559055531)
@@ -1,6 +1,6 @@
 data class ExchangeRatesResponse (
-    val base:String,
-    val rates:Map<String, Double>
+    val base: String,
+    val rates: Map<String, Double>
 )
 
 //Essa classe representa a resposta da API, facilitando o parsing do JSON.
\ No newline at end of file
Index: CurrencyConverter/app/src/main/java/RetrofitInstance.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class RetrofitInstance {\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CurrencyConverter/app/src/main/java/RetrofitInstance.kt b/CurrencyConverter/app/src/main/java/RetrofitInstance.kt
--- a/CurrencyConverter/app/src/main/java/RetrofitInstance.kt	(revision 0e7d7035ce0454414ff91a09b639a9933c3cb3d1)
+++ b/CurrencyConverter/app/src/main/java/RetrofitInstance.kt	(date 1741557899698)
@@ -1,2 +1,16 @@
-class RetrofitInstance {
+import retrofit2.Retrofit
+import retrofit2.converter.gson.GsonConverterFactory
+
+object RetrofitInstance {
+    private const val BASE_URL = "https://v6.exchangerate-api.com/v6/YOUR-API-KEY/"
+
+    val api: CurrencyApi by lazy {
+        Retrofit.Builder()
+            .baseUrl(BASE_URL)
+            .addConverterFactory(GsonConverterFactory.create())
+            .build()
+            .create(CurrencyApi::class.java)
+    }
+
+
 }
\ No newline at end of file
Index: CurrencyConverter/app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CurrencyConverter/app/src/main/res/layout/activity_main.xml b/CurrencyConverter/app/src/main/res/layout/activity_main.xml
new file mode 100644
--- /dev/null	(date 1741563816766)
+++ b/CurrencyConverter/app/src/main/res/layout/activity_main.xml	(date 1741563816766)
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:padding="16dp">
+
+    <EditText
+        android:id="@+id/editAmount"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:hint="Digite o valor em USD"
+        android:inputType="numberDecimal" />
+
+    <Button
+        android:id="@+id/btnConvert"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Converter para BRL" />
+
+    <TextView
+        android:id="@+id/txtResult"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Resultado:"
+        android:textSize="18sp"
+        android:paddingTop="16dp" />
+</LinearLayout>
\ No newline at end of file
Index: CurrencyConverter/app/src/main/java/CurrencyApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import okhttp3.Response\r\nimport retrofit2.http.GET\r\nimport retrofit2.http.Query\r\n\r\ninterface CurrencyApi {\r\n@GET(\"latest\")\r\nsuspend fun getExchangeRates(@Query(\"base\")base:String ): Response<ExchangeRatesResponse>\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//Essa interface define o endpoint da API para buscar as taxas de câmbio.
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CurrencyConverter/app/src/main/java/CurrencyApi.kt b/CurrencyConverter/app/src/main/java/CurrencyApi.kt
--- a/CurrencyConverter/app/src/main/java/CurrencyApi.kt	(revision 0e7d7035ce0454414ff91a09b639a9933c3cb3d1)
+++ b/CurrencyConverter/app/src/main/java/CurrencyApi.kt	(date 1741559181379)
@@ -1,12 +1,11 @@
-import okhttp3.Response
 import retrofit2.http.GET
 import retrofit2.http.Query
+import retrofit2.Response
 
 interface CurrencyApi {
 @GET("latest")
-suspend fun getExchangeRates(@Query("base")base:String ): Response<ExchangeRatesResponse>
+suspend fun getExchangeRates(@Query("base") base: String): Response<ExchangeRatesResponse>
 
-
 }
 
 
Index: CurrencyConverter/app/src/main/java/com/example/currencyconverter/CurrencyViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.currencyconverter\r\n\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.viewModelScope\r\nimport kotlinx.coroutines.launch\r\n\r\nclass CurrencyViewModel(private val repository: CurrencyRepository): ViewModel() {\r\n    private val _exchangeRate = MutableLiveData<Double>()\r\n    val exchangeRate: LiveData<Double> get () = _exchangeRate\r\n\r\n    fun convertCurrency(amount: Double, from: String, to: String ){\r\n        viewModelScope.launch {\r\n            val rates = repository.get.Rates(from)\r\n            val rate = rates?.rates?.get(to)? : 0.0\r\n            _exchangeRate.postValue(amount * rate)\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CurrencyConverter/app/src/main/java/com/example/currencyconverter/CurrencyViewModel.kt b/CurrencyConverter/app/src/main/java/com/example/currencyconverter/CurrencyViewModel.kt
--- a/CurrencyConverter/app/src/main/java/com/example/currencyconverter/CurrencyViewModel.kt	(revision 0e7d7035ce0454414ff91a09b639a9933c3cb3d1)
+++ b/CurrencyConverter/app/src/main/java/com/example/currencyconverter/CurrencyViewModel.kt	(date 1741557580828)
@@ -12,8 +12,8 @@
 
     fun convertCurrency(amount: Double, from: String, to: String ){
         viewModelScope.launch {
-            val rates = repository.get.Rates(from)
-            val rate = rates?.rates?.get(to)? : 0.0
+            val rates = repository.getRates(from)
+            val rate = rates?.rates?.get(to)?:0.0
             _exchangeRate.postValue(amount * rate)
 
         }
@@ -21,3 +21,9 @@
     }
 
 }
+//Para que serve essa classe?
+
+//Mantém a lógica de conversão separada da UI, seguindo o padrão MVVM.
+//✅ Obtém as taxas de câmbio do CurrencyRepository.
+//✅ Usa LiveData para atualizar a interface gráfica automaticamente.
+//✅ Usa corrotinas (viewModelScope.launch) para chamadas assíncronas sem travar a interface.
\ No newline at end of file
Index: CurrencyConverter/app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.kotlin.android)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.currencyconverter\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.currencyconverter\"\r\n        minSdk = 24\r\n        targetSdk = 33\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n//implementações inseridas por mim.\r\n\r\n    implementation (libs.squareup.retrofit)\r\n    implementation (libs.converter.gson)\r\n    implementation (libs.androidx.lifecycle.viewmodel.ktx)\r\n    implementation (libs.androidx.lifecycle.livedata.ktx)\r\n    implementation (libs.kotlinx.coroutines.android)\r\n\r\n    //fim\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.androidx.appcompat)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CurrencyConverter/app/build.gradle.kts b/CurrencyConverter/app/build.gradle.kts
--- a/CurrencyConverter/app/build.gradle.kts	(revision 0e7d7035ce0454414ff91a09b639a9933c3cb3d1)
+++ b/CurrencyConverter/app/build.gradle.kts	(date 1741562236018)
@@ -5,12 +5,12 @@
 
 android {
     namespace = "com.example.currencyconverter"
-    compileSdk = 34
+    compileSdk = 35
 
     defaultConfig {
         applicationId = "com.example.currencyconverter"
         minSdk = 24
-        targetSdk = 33
+        targetSdk = 35
         versionCode = 1
         versionName = "1.0"
 
@@ -40,7 +40,7 @@
         compose = true
     }
     composeOptions {
-        kotlinCompilerExtensionVersion = "1.5.1"
+        kotlinCompilerExtensionVersion = "1.5.2"
     }
     packaging {
         resources {
